version: 2

unit_tests:
  - name: merge_two_periods
    model: pass_through_model
    given:
      - input: source('src_fixture', 'data')
        format: sql
        rows: |
          {% raw %}
          with data as (
            select * from values
              (1, 1, 'a', '2024-01-01' :: date, '2024-01-03' :: date),
              (1, 1, 'a', '2024-01-03',         '2024-01-05'),
              as t(id, val, category, valid_from, valid_to)
          )
          select * from (
            {{ macro_lib.merge_timeline(relation='data', partition_by=['id', 'category', 'val']) }}
          )
          {% endraw %}
    expect:
      rows:
        - {id: 1, val: 1, category: 'a', valid_from: '2024-01-01', valid_to: '2024-01-05'}

  - name: merge_four_periods
    model: pass_through_model
    given:
      - input: source('src_fixture', 'data')
        format: sql
        rows: |
          {% raw %}
          with data as (
            select * from values
              (1, 1, 'a', '2024-01-01' :: date, '2024-01-03' :: date),
              (1, 1, 'a', '2024-01-03',         '2024-01-05'),
              (1, 1, 'a', '2024-01-05',         '2024-01-07'),
              (1, 1, 'a', '2024-01-07',         '2024-01-09'),
              as t(id, val, category, valid_from, valid_to)
          )
          select * from (
            {{ macro_lib.merge_timeline(relation='data', partition_by=['id', 'category', 'val']) }}
          )
          {% endraw %}
    expect:
      rows:
        - {id: 1, val: 1, category: 'a', valid_from: '2024-01-01', valid_to: '2024-01-09'}

  - name: merge_periods_with_a_gap
    model: pass_through_model
    given:
      - input: source('src_fixture', 'data')
        format: sql
        rows: |
          {% raw %}
          with data as (
            select * from values
              (1, 1, 'a', '2024-01-01' :: date, '2024-01-03' :: date),
              (1, 1, 'a', '2024-01-03',         '2024-01-05'),
              (1, 1, 'a', '2024-01-07',         '2024-01-09'),
              as t(id, val, category, valid_from, valid_to)
          )
          select * from (
            {{ macro_lib.merge_timeline(relation='data', partition_by=['id', 'category', 'val']) }}
          )
          {% endraw %}
    expect:
      rows:
        - {id: 1, val: 1, category: 'a', valid_from: '2024-01-01', valid_to: '2024-01-05'}
        - {id: 1, val: 1, category: 'a', valid_from: '2024-01-07', valid_to: '2024-01-09'}

  - name: merge_periods_with_subset_of_columns
    model: pass_through_model
    given:
      - input: source('src_fixture', 'data')
        format: sql
        rows: |
          {% raw %}
          with data as (
            select * from values
              (1, 1, 'a', '2024-01-01' :: date, '2024-01-03' :: date),
              (1, 2, 'a', '2024-01-03',         '2024-01-05'),
              (2, 1, 'a', '2024-01-05',         '2024-01-07'),
              (1, 1, 'a', '2024-01-07',         '2024-01-09'),
              as t(id, val, category, valid_from, valid_to)
          )
          select * from (
            {{ macro_lib.merge_timeline(relation="data", partition_by=["category", "val"]) }}
          )
          {% endraw %}
    expect:
      rows:
        - {val: 1, category: 'a', valid_from: '2024-01-01', valid_to: '2024-01-03'}
        - {val: 2, category: 'a', valid_from: '2024-01-03', valid_to: '2024-01-05'}
        - {val: 1, category: 'a', valid_from: '2024-01-05', valid_to: '2024-01-09'}
